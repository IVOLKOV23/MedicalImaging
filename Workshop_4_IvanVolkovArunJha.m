% Medical Imaging
% Workshop 4
% Ivan Volkov 988146 and Arun Jha 997110
% 19/05/22

%% Section A
% given parameters
f0 = 5*10^6;  % crystal freq (Hz)
f_s = 100*10^6; % sampling RF freq (Hz)
c = 1540;       % speed of sound in the media (m/s)
n_cycle = 1;    % number of cycles

% wavelength of the beam generated by the crystal (Q1)
lambda = c/f0;

% best resolution (Q2)
pulse_length = lambda*n_cycle;
res = 0.5*pulse_length;

% read the RF-line (Q4)
load US_Lab_SectionA_RF_Data;

% distance travelled (Q6)
max_z = c*(length(rf_line_A)/f_s);
z = 0:(c/f_s):max_z-(c/f_s);

% display (Q7)
figure(1);
plot(z, rf_line_A);
xlabel('Distance (m)');
ylabel('Amplitude (mV)');
title('Radiofrequency signal');

% envelope (Q9)
rf_line_A_e = abs(hilbert(rf_line_A));

% display (Q10)
figure(2);
plot(z, rf_line_A_e);
xlabel('Distance (m)');
ylabel('Amplitude (mV)');
title('Envelope of the radiofrequency signal');

% comparison (Q11)
figure(3);
plot(z, rf_line_A);
hold on
plot(z, rf_line_A_e, '--');
hold off
legend("Original RF-line", "RF-line envelope");
xlabel('Distance (m)');
ylabel('Amplitude (mV)');
title('Radiofrequency signal');

%% Section B
% given parameters
f_s = 100*10^6;     % sampling RF freq (Hz)
c = 1540;           % speed of sound in the media (m/s)
n_RF = 50;          % generated lines

% load the data 
rf1 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln1.mat');
rf10 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln10.mat');
rf15 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln15.mat');
rf25 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln25.mat');
rf35 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln35.mat');
rf40 = load('US_Lab_SectionB_RF_DATA/rf_data/rf_ln40.mat');

% depth travelled
max_z1 = c*(length(rf1.rf_data)/f_s)/2;
z1 = linspace(0, max_z1*1000, length(rf1.rf_data));
max_z10 = c*(length(rf1.rf_data)/f_s)/2;
z10 = linspace(0, max_z10*1000, length(rf10.rf_data));
max_z15 = c*(length(rf15.rf_data)/f_s)/2;
z15 = linspace(0, max_z15*1000, length(rf15.rf_data));
max_z25 = c*(length(rf25.rf_data)/f_s)/2;
z25 = linspace(0, max_z25*1000, length(rf25.rf_data));
max_z35 = c*(length(rf35.rf_data)/f_s)/2;
z35 = linspace(0, max_z35*1000, length(rf35.rf_data));
max_z40 = c*(length(rf40.rf_data)/f_s)/2;
z40 = linspace(0, max_z40*1000, length(rf40.rf_data));

% display (Q2)
figure(4);
subplot(2, 2, 1);
plot(z1, rf1.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF1");
subplot(2, 2, 2);
plot(z10, rf10.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF10");
subplot(2, 2, 3);
plot(z25, rf25.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF25");
subplot(2, 2, 4);
plot(z40, rf40.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF40");

% display (Q3)
figure(5);
subplot(2, 1, 1);
plot(z15, rf15.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF15");
subplot(2, 1, 2);
plot(z35, rf35.rf_data);
xlabel('Distance (mm)');
ylabel('Amplitude (mV)');
title("RF35");

% demodulated RF data (Q5)
for i = 1:1:n_RF
    
    % load the file
    RFLine = ['load US_Lab_SectionB_RF_DATA/rf_data/rf_ln', num2str(i), '.mat'];
    eval(RFLine);
    
    % rf_data_z
    rf_data_z = [zeros(fix(tstart*f_s), 1); rf_data];
    
    % envelope
    RF_Env = abs(hilbert(rf_data_z));
    
    % demodulated RF
    demRF_Mx(1:length(RF_Env), i) = RF_Env;
    
end

% depth
max_z = (c*(max(size(demRF_Mx))/f_s))/2;

% decimate the data (Q6)
D = 10;
demRF_Mx_D = demRF_Mx(1:D:max(size(demRF_Mx)), :);

% normalise (Q7)
N = max(demRF_Mx_D, [], 'all');
demRF_Mx_D_N = demRF_Mx_D./N;

% ratio (Q8)
val1 = demRF_Mx_D_N(850, 40);
val2 = demRF_Mx_D_N(10, 10);
ratio = val1/val2;

% compression (Q9)
log_demRF_Mx_D_N = log10(demRF_Mx_D_N+0.001);

% min value (Q10)
S = min(log_demRF_Mx_D_N, [], 'all');
log_demRF_Mx_D_N_S = log_demRF_Mx_D_N - S;

% interpolation (Q11)
RSR = 20;
[n, m] = size(log_demRF_Mx_D_N_S);
Phantom = zeros(n, m*RSR);
for i = 1:n
    Phantom(i, :) = abs(interp(log_demRF_Mx_D_N_S(i, :), RSR)); 
end

% display phantom (Q12)
figure(6);
imagesc([-20 20], linspace(0, max_z*1000, max(size(Phantom))), Phantom);
axis image
colormap gray
axis([-20 20 35 90])
xlabel('Width (mm)');
ylabel('Depth (mm)');
title("Phantom reconstruction");

% remove compression
% new min value 
S = min(demRF_Mx_D_N, [], 'all');
demRF_Mx_D_N_S = demRF_Mx_D_N - S;

% interpolation 
RSR = 20;
[n, m] = size(demRF_Mx_D_N_S);
Phantom = zeros(n, m*RSR);
for i = 1:n
    Phantom(i, :) = abs(interp(demRF_Mx_D_N_S(i, :), RSR)); 
end

% display phantom
figure(7);
imagesc([-20 20], linspace(0, max_z*1000, max(size(Phantom))), Phantom);
axis image
colormap gray
axis([-20 20 35 90])
xlabel('Width (mm)');
ylabel('Depth (mm)');
title("Phantom reconstruction");

% remove interpolation
figure(8);
imagesc([-20 20], linspace(0, max_z*1000, max(size(log_demRF_Mx_D_N_S))), log_demRF_Mx_D_N_S);
axis image
colormap gray
axis([-20 20 35 90])
xlabel('Width (mm)');
ylabel('Depth (mm)');
title("Phantom reconstruction");

%% Section C
% given parameters
f_s = 100*10^6;     % sampling RF freq (Hz)
c = 1540;           % speed of sound in the media (m/s)
n_RF = 128;         % generated lines

% demodulated RF data (Q2)
for i = 1:1:n_RF
    % load the file
    RFLine = ['load US_Lab_SectionC_RF_Data/rf_data/rf_ln', num2str(i), '.mat'];
    eval(RFLine);
    
    % rf_data_z
    rf_data_z = [zeros(fix(tstart*f_s), 1); rf_data];
    
    % envelope
    RF_Env = abs(hilbert(rf_data_z));
    
    % demodulated RF
    demRF_Mx(1:length(RF_Env), i) = RF_Env;
end

% depth
max_z = (c*(max(size(demRF_Mx))/f_s))/2;

% decimate the data 
D = 20;
demRF_Mx_D = demRF_Mx(1:D:max(size(demRF_Mx)), :);

% normalise 
N = max(demRF_Mx_D, [], 'all');
demRF_Mx_D_N = demRF_Mx_D./N;

% compression 
log_demRF_Mx_D_N = log10(demRF_Mx_D_N+0.001);

% min value 
S = min(log_demRF_Mx_D_N, [], 'all');
log_demRF_Mx_D_N_S = log_demRF_Mx_D_N - S;

% interpolation 
RSR = 10;
[n, m] = size(log_demRF_Mx_D_N_S);
Phantom = zeros(n, m*RSR);
for i = 1:n
    Phantom(i, :) = abs(interp(log_demRF_Mx_D_N_S(i, :), RSR)); 
end

% display (Q3)
figure(9);
imagesc([-120 120], linspace(0, max_z*1000, max(size(Phantom))), Phantom);
axis image
colormap gray
xlabel('Width (mm)');
ylabel('Depth (mm)');
title("Phantom reconstruction");
